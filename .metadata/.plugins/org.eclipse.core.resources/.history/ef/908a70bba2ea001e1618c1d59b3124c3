package org.appcelerator.titanium;

import java.io.IOException;
import java.io.Reader;
import java.util.concurrent.CountDownLatch;

import org.appcelerator.titanium.bridge.TiProxy;
import org.mozilla.javascript.Context;
import org.mozilla.javascript.Scriptable;

public class TiJSContext
{
	private CountDownLatch initialized;
	private Scriptable jsScope;

	public TiJSContext()
	{
		initialized = new CountDownLatch(1);
		create();
	}

	public void create()
	{
		new Thread(new Runnable()
		{
			public void run() {
		        Context ctx = enter();
		        try
		        {
		            jsScope = ctx.initStandardObjects();

		            TiProxy ti = new TiProxy(jsScope, null);
		            jsScope.put("Titanium", jsScope, ti);
		            jsScope.put("Ti", jsScope, ti);

		            // signal complete
		            initialized.countDown();
		         } finally {
		        	 exit();
		         }
			}

		}).start();
	}

	public Object eval(Reader r, String srcName)
		throws IOException
	{
		requireInitialized();

		Context ctx = enter();
		try {
			return ctx.evaluateReader(jsScope, r, srcName, 0, null);
		} finally {
			exit();
		}
	}

	public Scriptable getScope()
	{
		requireInitialized();
		return jsScope;
	}

	public void cleanup()
	{
		if (jsScope != null) {
			jsScope = null;
		}
	}

	private void requireInitialized() {
		try {
			initialized.await();
		} catch (InterruptedException e) {
			// Ignore
		}
	}

	private Context enter() {
		Context ctx = Context.enter();
        // FOR NOW (UNTIL WE CAN COMPILE IN PACKAGING) WE HAVE TO TURN OFF OPTIMIZATIONS
		ctx.setOptimizationLevel(-1);
		return ctx;
	}

	private void exit() {
		Context.exit();
	}
}
