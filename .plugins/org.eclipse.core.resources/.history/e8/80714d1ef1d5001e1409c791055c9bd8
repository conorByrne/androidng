<html>
<head>
	<title>Contacts</title>
	<script>
	window.onload  = function()
	{
		// helper variable used to control update/create mode for contacts
		var mode = 'ADD';

		// helper variable to store contact to update
		var contactToUpdate = null;
		
		// template for table view that shows contact detail
		var detailTemplate = {
			rowHeight:50,
			selectedBackgroundColor:'#ffffff',
			layout:[
				{type:'text', name:'title', fontSize:13, color:'#165735', left:5, top:5, height:15},
				{type:'text', name:'value', fontSize:15, color:'#777777', top:25, left:5, height:20},
				
			]
		}
		// table view for contact detail
		var detailTableView = Titanium.UI.createTableView({template:detailTemplate}, function(e)
		{
			if (e.index==0)
			{
				Titanium.UI.currentWindow.showView(mainView,{
					animated:true,
					animationStyle:Titanium.UI.iPhone.AnimationStyle.FLIP_FROM_LEFT,
					animationDuration:1000
				});
			}
		});
		
		// 
		// set table view data for a selected contact and show table view
		//
		function displayContact(c)
		{
			var data = [];
			data.push({title:'Contact Detail - click here to go back', backgroundColor:'#165735', selectedBackgroundColor:'#165735', layout:[{color:'#576996',fontWeight:'bold',fontSize:16, color:'#ffffff',height:30,  top:10}]});
			data.push({title:'firstName', value:((c.firstName)?c.firstName:'not specified')});
			data.push({title: 'lastName', value:((c.lastName)?c.lastName:'not specified')});
			data.push({title: 'middleName', value:((c.middleName)?c.middleName:'not specified')});
			data.push({title:'prefix', value:((c.prefix)?c.prefix:'not specified')});
			data.push({title: 'suffix', value:((c.suffix)?c.suffix:'not specified')});
			data.push({title: 'nickname', value:((c.nickname)?c.nickname:'not specified')});
			data.push({title: 'phoneticFirstName', value:((c.phoneticFirstName)?c.phoneticFirstName:'not specified')});
			data.push({title: 'phoneticLastName', value:((c.phoneticLastName)?c.phoneticLastName:'not specified')});
			data.push({title: 'phoneticMiddleName', value:((c.phoneticMiddleName)?c.phoneticMiddleName:'not specified')});
			data.push({title: 'organization', value:((c.organization)?c.organization[0].value.company:'not specified')});
			data.push({title: 'email', value:((c.email[0])?c.email[0].value:'not specified')});			
			data.push({title: 'birthday', value:((c.birthday)?c.birthday:'not specified')});
			data.push({title: 'note', value:((c.note[0])?c.note[0].value:'not specified')});
			data.push({title: 'creationDate', value:((c.creationDate)?c.creationDate:'not specified')});
			data.push({title: 'modificationDate', value: 
			 		+ ((c.modificationDate)?c.modificationDate:'not specified')});
			data.push({title: 'date', value:((c.date)?c.date:'not specified')});
			data.push({title: 'phone', value:((c.phone[0])?c.phone[0].value:'not specified')});
			data.push({title: 'instantMessenge', value:((c.instantMessenger)?c.instantMessenger:'not specified')});
			data.push({title: 'url', value:((c.url)?c.url:'not specified')});
			data.push({title: 'relatives', value:((c.relatives)?c.relatives:'not specified')});
			data.push({title: 'displayLabel', value:((c.displayLabel)?c.displayLabel:'not specified')});
			data.push({title: 'displayName', value:((c.displayName)?c.displayName:'not specified')});
			data.push({title: 'street1', value:((c.address[0])?c.address[0].value.street1:'not specified')});
			data.push({title: 'city', value:((c.address[0])?c.address[0].value.city:'not specified')});
			data.push({title: 'region1', value:((c.address[0])?c.address[0].value.region1:'not specified')});
			data.push({title: 'postalCode', value:((c.address[0])?c.address[0].value.postalCode:'not specified')});
			data.push({title: 'countryCode', value:((c.address[0])?c.address[0].value.countryCode:'not specified')});
			data.push({title: 'displayAddress', value:((c.address[0])?c.address[0].value.displayAddress:'not specified')});

			// use c.imageData to get image for contact

			detailTableView.setData(data);
			Titanium.UI.currentWindow.showView(detailTableView,{
				animated:true,
				animationStyle:Titanium.UI.iPhone.AnimationStyle.FLIP_FROM_LEFT,
				animationDuration:1000
			});
			
		};

		//
		// get all contacts and display in table view
		//
		function reloadContacts()
		{
			var data = [{title:'Go Back - Showing 10 (or less)', layout:[{color:'blue',fontSize:14}]}];
			var contacts = Titanium.Contacts.getAllContacts();
			for (var i=0;i<Math.min(10, contacts.length);i++)
			{
				data.push({title:contacts[i].displayName});
			}
			tableView.setData(data);
		};
		
		// main table view template
		var mainTemplate = {
		 	layout:[
		   		{type:'text', left:50,  name:'title', fontSize:18, fontWeight:'bold', color:'#0e0500 ', top:12}
		]};

		// main table view data
		var mainData = [

			{rowHeight:10},	// create an empty row to give it space up top..

			{title:'Show Picker',backgroundImage:'images/tableview/off_1.png', 
					selectedBackgroundImage:'images/tableview/on_1.png'},

			{title:'Show Picker (no detail)',backgroundImage:'images/tableview/off_2.png',
					selectedBackgroundImage:'images/tableview/on_2.png'},

			{title:'Add Contact',backgroundImage:'images/tableview/off_3.png',
					selectedBackgroundImage:'images/tableview/on_3.png'},

			{title:'View Contacts',backgroundImage:'images/tableview/off_4.png',
				selectedBackgroundImage:'images/tableview/on_4.png'},

			{title:'Remove Contact',backgroundImage:'images/tableview/off_1.png',
					selectedBackgroundImage:'images/tableview/on_1.png'},

			{title:'Update Contact',backgroundImage:'images/tableview/off_2.png',
					selectedBackgroundImage:'images/tableview/on_2.png'},

		];

		// main table view
		var mainView = Titanium.UI.createTableView({
			template:mainTemplate,
			backgroundColor:'transparent', 
			borderColor:'transparent',
			marginLeft:15,
			marginRight:15,
			data:mainData

		}, function(e)
		{
			switch(e.index)
			{
				case 1:
				{
					// show contact picker (with detail view)
					Titanium.Contacts.showContactPicker({

					   	success:function(e)
					   	{
							displayContact(e.contact);
					   	},
					   	cancel:function()
					   	{
					   	},
					   	details:['firstName','lastName','phone','email', 'organization']
					});
					break;
				}
				case 2:
				{
					// show contact picker normal
					Titanium.Contacts.showContactPicker({

					   	success:function(e)
					   	{
							displayContact(e.contact);
					   	},
					   	cancel:function()
					   	{
					   	}
					});
					break;
				}
				case 3:
				{
					if (Titanium.Platform.name == 'android')
					{
						Titanium.UI.currentWindow.showView(Titanium.UI.currentWindow.getViews()[0],{
							animated:true,
							animationStyle:Titanium.UI.Android.AnimationStyle.SLIDE_FROM_LEFT,
							animationDuration:1000
						});
					}
					else
					{
						Titanium.UI.currentWindow.showView(groupedView,{
							animated:true,
							animationStyle:Titanium.UI.iPhone.AnimationStyle.FLIP_FROM_LEFT,
							animationDuration:1000
						});
					}
					mode = 'ADD'
					break;
				}
				case 4:
				{
					// show view contacts view
					reloadContacts();
					Titanium.UI.currentWindow.showView(tableView,{
						animated:true,
						animationStyle:Titanium.UI.iPhone.AnimationStyle.FLIP_FROM_LEFT,
						animationDuration:1000
					});
					break;
				}
				case 5:
				{
					// remove a contact when selected
					Titanium.Contacts.showContactPicker({
					   	success:function(e)
					   	{
							Titanium.Contacts.removeContact(e.contact);
							Titanium.UI.createAlertDialog({title:'Contacts',message:'Contact removed.'}).show();
					   	},
					   	cancel:function()
					   	{
					   	}
					});
					break;
				}
				case 6:
				{
					// update a contact
					Titanium.Contacts.showContactPicker({
					   	success:function(e)
					   	{
							contactToUpdate = e.contact;
							if (Titanium.Platform.name == 'android')
							{
								Titanium.UI.currentWindow.showView(Titanium.UI.currentWindow.getViews()[0],{
									animated:true,
									animationStyle:Titanium.UI.Android.AnimationStyle.SLIDE_FROM_LEFT,
									animationDuration:1000
								});
							}
							else
							{
								Titanium.UI.currentWindow.showView(groupedView,{
									animated:true,
									animationStyle:Titanium.UI.iPhone.AnimationStyle.FLIP_FROM_LEFT,
									animationDuration:1000
								});
							}
							mode = 'UPDATE'
							firstName.setValue(e.contact.firstName);
							lastName.setValue(e.contact.lastName);
							email.setValue(e.contact.email[0].value);

					   	},
					   	cancel:function()
					   	{
					   	}
					});
					break;
				}
			}
		});


		//
		//  Create Table View to show contacts
		//
		var data = [{title:'No Contacts...'}];
		var template = {layout:[{name:'title', fontSize:20, fontWeight:'bold',left:10, type:'text', color:'black',top:10}]};
		var tableView = Titanium.UI.createTableView({template:template,data:data}, function(e)
		{
			if (e.index ==0)
			{
				Titanium.UI.currentWindow.showView(mainView,{
					animated:true,
					animationStyle:Titanium.UI.iPhone.AnimationStyle.FLIP_FROM_LEFT,
					animationDuration:1000
				});
				
			}
		});
		
		//
		// create grouped view for adding/updating contacts
		//
		
		// firstname
		var fnData = {width:100,hintText:'first name'};
		var lnData = {width:100,hintText:'last name'};
		var eData = {width:100,hintText:'email'};

		if (Titanium.Platform.name != 'android')
		{
			fnData = {id:'first',width:200,hintText:'first name'};
			lnData = {id:'last',width:200,hintText:'last name'};
			eData = {id:'email',width:200,hintText:'email'};
			
		}
		var firstName = Titanium.UI.createTextField(fnData);
		firstName.addEventListener('return',function(e)
		{
			lastName.focus();
		});
		// lastname
		var lastName = Titanium.UI.createTextField(lnData);
		lastName.addEventListener('return',function(e)
		{
			email.focus();
		});
		// email
		var email = Titanium.UI.createTextField(eData);
		email.addEventListener('return',function(e)
		{
			email.blur();
		});

		// data for input grouped section
		var inputData = [
			{title:'First Name', input:firstName, fontSize:16},
			{title:'Last Name', input:lastName,fontSize:16},
			{title:'Email', input:email,fontSize:16}
		];

		if (Titanium.Platform.name != 'android')
		{
			// input grouped section
			var inputSection = Titanium.UI.iPhone.createGroupedSection({
				header:'Manage Contact',
				type:'input',
				data:inputData
			});

			// data for button section
			var buttonData = [
				{title:'Save Contact'},
				{title:'Go Back'}
			];
			// button grouped section
			var buttonSection = Titanium.UI.iPhone.createGroupedSection({
				type:'button',
				data:buttonData,
				fontSize:14
			});
			buttonSection.addEventListener('click', function(e)
			{
				if (e.row==1)
				{
					showMainView();
				}
				else
				{
					// update or create contact
					if (mode == 'UPDATE')
					{
						updateContact();
					}
					else
					{
						addContact();
					}
				}
			});

			// create grouped view
			var groupedView = Titanium.UI.iPhone.createGroupedView();
			groupedView.addSection(inputSection);
			groupedView.addSection(buttonSection);	
			Titanium.UI.currentWindow.addView(groupedView);
			
		}
		
		// add views
		Titanium.UI.currentWindow.addView(tableView);
		Titanium.UI.currentWindow.addView(detailTableView);
		Titanium.UI.currentWindow.addView(mainView);

		Titanium.UI.currentWindow.showView(mainView);
		function showMainView()
		{
			var style = (Titanium.Platform.name == 'android')
				?Titanium.UI.Android.AnimationStyle.SLIDE_FROM_LEFT
				: Titanium.UI.iPhone.AnimationStyle.FLIP_FROM_LEFT;
				
			// go back to main view
			Titanium.UI.currentWindow.showView(mainView,{
				animated:true,
				animationStyle:style,
				animationDuration:1000
			});
		};
		function updateContact()
		{
			// update contact
			contactToUpdate.firstName = firstName.value;
			contactToUpdate.lastName = lastName.value;
			contactToUpdate.email = [{label:'home', value:email.value}]
			Titanium.Contacts.saveContact(contactToUpdate);

			// show main view
			Titanium.UI.currentWindow.showView(mainView,{
				animated:true,
				animationStyle:Titanium.UI.iPhone.AnimationStyle.FLIP_FROM_LEFT,
				animationDuration:1000
			});
			
		};
		function addContact()
		{
			
			// add contact
			var c = Titanium.Contacts.createContact({
			    firstName:firstName.value,
			    lastName:lastName.value,
				email:[{label:'home', value:email.value}]
			});
			Titanium.API.info('after create');

			Titanium.Contacts.addContact(c);
			Titanium.API.info('after add');

			Titanium.UI.createAlertDialog({title:'Contacts',message:'Contact Added.'}).show();
		};
		
		if (Titanium.Platform.name == 'android')
		{
			document.getElementById('save').onclick = function()
			{
				if (mode == 'UPDATE')
				{
					updateContact();
				}
				else
				{
					addContact();
				}
			};
			document.getElementById('back').onclick = function()
			{
				Titanium.UI.currentWindow.showView(mainView,{
					animated:true,
					animationStyle:Titanium.UI.Android.AnimationStyle.SLIDE_FROM_LEFT,
					animationDuration:1000
				});
			};
			
		}
	};
	</script>
</head>
<body  style="font-family:'Helvetica Neue'">
	<div id="first" style="height:50px;width:200px"></div>
	<div id="last" style="height:50px;width:200px"></div>
	<div id="email" style="height:50px;width:200px"></div>
	<button id="save" style="height:30px;width:200px;font-size:20px">Save Contact</button>
	<div>
	<button id="back" style="height:30px;width:200px;font-size:20px">Go Back</button>
	</div>
</body>
</html>