package org.appcelerator.titanium.module.ui;

import org.appcelerator.titanium.TitaniumModuleManager;
import org.appcelerator.titanium.api.ITitaniumLifecycle;
import org.appcelerator.titanium.api.ITitaniumView;
import org.appcelerator.titanium.config.TitaniumConfig;
import org.appcelerator.titanium.util.TitaniumJSEventManager;

import android.content.res.Configuration;
import android.os.Bundle;
import android.os.Handler;
import android.os.Message;
import android.view.Menu;
import android.view.MenuItem;
import android.view.View;
import android.widget.FrameLayout;

public abstract class TitaniumBaseView extends FrameLayout
	implements ITitaniumView, Handler.Callback
{
	private static final String LCAT = "TiBaseView";
	private static final boolean DBG = TitaniumConfig.LOGD;

	protected static final String MSG_EXTRA_CALLBACK = "cb";

	protected TitaniumModuleManager tmm;
	protected Handler handler;
	protected TitaniumJSEventManager eventManager;

	public static final String EVENT_FOCUSED = "focused";
	public static final String EVENT_FOCUSED_JSON = "{type:'" + EVENT_FOCUSED + "'}";
	public static final String EVENT_UNFOCUSED = "unfocused";
	public static final String EVENT_UNFOCUSED_JSON = "{type:'" + EVENT_UNFOCUSED + "'}";

	protected static final int MSG_OPEN = 200;

	public TitaniumBaseView(TitaniumModuleManager tmm)
	{
		super(tmm.getAppContext());
		this.handler = new Handler(this);
		this.eventManager = new TitaniumJSEventManager(tmm);
		this.eventManager.supportEvent(EVENT_FOCUSED);
		this.eventManager.supportEvent(EVENT_UNFOCUSED);

	}

	public boolean handleMessage(Message msg)
	{
		boolean handled = false;
		Bundle b = msg.getData();

		switch(msg.what) {
			case MSG_OPEN : {
				eventManager.invokeSuccessListeners(EVENT_FOCUSED, EVENT_FOCUSED_JSON);
				doOpen(b.getString(MSG_EXTRA_CALLBACK));
				handled = true;
			}
		}

		return handled;
	}

	public int addEventListener(String eventName, String listener) {
		return eventManager.addListener(eventName, listener);
	}

	public void removeEventListener(String eventName, int listenerId) {
		eventManager.removeListener(eventName, listenerId);
	}

	public void dispatchConfigurationChange(Configuration newConfig) {
		// TODO Auto-generated method stub

	}

	public boolean dispatchOptionsItemSelected(MenuItem item) {
		// TODO Auto-generated method stub
		return false;
	}

	public boolean dispatchPrepareOptionsMenu(Menu menu) {
		// TODO Auto-generated method stub
		return false;
	}

	public void dispatchWindowFocusChanged(boolean hasFocus) {
		// TODO Auto-generated method stub

	}

	public String getKey() {
		// TODO Auto-generated method stub
		return null;
	}

	public ITitaniumLifecycle getLifecycle() {
		// TODO Auto-generated method stub
		return null;
	}

	public String getName() {
		// TODO Auto-generated method stub
		return null;
	}

	public View getNativeView() {
		// TODO Auto-generated method stub
		return null;
	}

	public void hiding() {
		// TODO Auto-generated method stub

	}

	public boolean isPrimary() {
		// TODO Auto-generated method stub
		return false;
	}

	public void processOptions(String options) {
		// TODO Auto-generated method stub

	}

	public void removeEventListener(String eventName, int listenerId) {
		// TODO Auto-generated method stub

	}

	public void requestLayout() {
		// TODO Auto-generated method stub

	}

	public void setKey(String key) {
		// TODO Auto-generated method stub

	}

	public void setName(String name) {
		// TODO Auto-generated method stub

	}

	public void showing() {
		// TODO Auto-generated method stub

	}

}
